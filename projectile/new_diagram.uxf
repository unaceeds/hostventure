<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>196</x>
      <y>434</y>
      <w>203</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
*projectile::BrokenVisualFence*
--
-sc: StubbornCrew
-input: Scanner
--
+BrokenVisualFence(): ctor
+run(): void
+main(String[] args): void
--
Main class where the whole magic happens.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>133</y>
      <w>189</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
*projectile::RainyMeans*
--
--
~manualGravity(Forcefulness force): void
~smash(int multiplication): long
--
Just two simple functions to implement.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>63</x>
      <y>35</y>
      <w>182</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract class&gt;&gt;
*projectile::PlayerMisery*
--
#TWO_THOUGH = 2: int
-x: double
-y: double
#printing: boolean
--
+PlayerMisery(): ctor
+PlayerMisery(boolean printing): ctor
+PlayerMisery(double x, double y): ctor
-calculateDiagonal(): double
#moveBy(double x, double y): double
#moveTo(double x, double y): void
#calculateFame(double step): double
--
Abstract player properties i think.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>203</x>
      <y>252</y>
      <w>189</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
*projectile::StubbornCrew*
--
-z: long
--
+StubbornCrew(): ctor
+StubbornCrew(boolean printing): ctor
+manualGravity(Forcefulness force): void
+smash(int multiplication): long
#calculateFame(double step): double
--
Original class, which can be considered
as the main one actually.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>287</x>
      <y>7</y>
      <w>175</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
*projectile::Forcefulness*
--
WEAK_POINT
STRONG_MASS
DECAY_PEAK
--
For specifying the force of movements.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>203</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>287</x>
      <y>378</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>217</x>
      <y>203</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>84</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>301</x>
      <y>84</y>
      <w>21</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0</additional_attributes>
  </element>
</diagram>
